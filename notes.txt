createdb after pip install -r requirements.txt ? check the instructions

everytime update user models, run migrate.py so can see in postbird


blueprnts > Users > views.py (code here) > templates > users
views.py (all code here)
insdie templates folder there is a another users folder. where all html is kept

SIGN IN--

two ways.first way is sesions

save user id into session, browser cookies. 

Implement sessions form Flask, code given there

request.method > change to authenticate, check if user = userin database
save session['username'] as user id

AFTER LOG IN REDIRECT TO HOMEPAGE FOR NOW. DOING PROFILE PAGE TMROW

logout.

sessions.pop(userid) will logout user

flask login
insert code snippers into snippet.py
since peewee, use user.get_by_id instead of user.id  


can use {% blabla.is_authenticated%} to change stuff when user logged in, like logout showing
{%endif%}
o

redirect after post, render_template just renders the template within SAME url

-----------------DAY 3---------------------

need form in user profile. 
use @login_required to protect from non user

pass user=user into the edit.htmlso can manipulate the variables for editing

update def has login required, 
check again if correct user, same metho as def show
.takes in the logic for the edit.html. keep forms as post so details arent exposed on url
DONT DO PASSWORD IN EDIT.HTML. leave that later on. very very high risk. just change username,email,pic if u want to

in form value, input the {{user.name or email or whatever}}. if not even change, the same value will still go thru the update, will be reasigned to what it was before. leave name= as usename,no {}


in user.py validate for existing username. also existing password as well.

validations only run with .save. update will bypass .update. prefered is .save. .update meant for bulk update on multiple reocrds that arent sensitive

AMAZON picture

edit html has the profile image

in users/views.py
    users.upload 
    if not profile imagein request.files:
    error
    return redirect

    get files as request.files.get('profile_image')

    file.filename = secure_filename(file.filename) < instance of a file class? when dealing with files have nospacesin names. secure_filename is a method in werkzeug.replaces whitespacein filename with underscore

    if not  upload_file_to_s3(file):


inside util has s3_uploader.py
import boto3, botocore
from config import S3_KEY, S3_SECRET, S3_BUCKET

s3 = boto3.client(
   "s3",
   aws_access_key_id=Config.AWS_ACCESS_KEY,
   aws_secret_access_key=Config.AWS_ACCESS_KEY
)

def upload_file_to_s3(file):
    try:
        s3.upload_fileobj(
            file,
            Config.AWS_BUCKET_NAME,
            file.filename,
            ExtraArgs={
                "ACL":"public-read",
                "ContentType": file.content_type
            }
        )

    return True




in config.py under config
AWS_ACCESS_KEY=os.getenv('AWS_ACCESS_KEY)
AWS_SECRET_KEY=
AWS_BUCKET_KEY=


in views import 

in users.py

new profile_image =pw.Charfield(null=True)

@hybrid_property
def profile_image_url(self):
    return f"_____{self.profile image}"